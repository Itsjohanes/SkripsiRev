<?xml version="1.0" encoding="utf-8"?><Search><pages Count="16"><page Index="1"><![CDATA[FASE E













             OPERATOR &




             PERCABANGAN






             Algoritma dan Pemrograman


















                                                     DISAJIKAN OLEH
                                                     Johannes Alexander

                                                     Putra]]></page><page Index="2"><![CDATA[DAFTAR ISI











               Capaian Pembelajaran                                           01





               Tujuan Pembelajaran                                            02




               Operator                                                       03





               Percabangan                                                    08





               Daftar Pustaka                                                 14]]></page><page Index="3"><![CDATA[ALGORITMA DAN
                                                                                       PEMROGRAMAN











             CAPAIAN PEMBELAJARAN











  Pada  akhir  fase  E  peserta  didik  mampu  melakukan


  pemrograman  terstruktur,  antara  lain  penerapan

  struktur  data  yang  terdiri  dari  data  statis  (array  baik


  dimensi,  panjang,  tipe  data,  pengurutan)  dan  data

  dinamis  (list,  stack),  penggunaan  tipe  data,  struktur


  kontrol  perulangan  dan  percabangan  pada  proyek


  pengembangan perangkat lunak sederhana dan gim.

  Pemrograman berorientasi obyek







































                                                                                                          01]]></page><page Index="4"><![CDATA[ALGORITMA DAN
             TUJUAN                                                                PEMROGRAMAN


             PEMBELAJARAN






       Tujuan Pembelajaran setelah

       menyelesaikan pertemuan ini adalah:

             Siswa mampu

             mengimplementasikan operator

             dalam bahasa Java/C++

             Siswa mampu

             mengimplementasikan percabangan

             pada bahasa pemrograman

             Java/C++

             Siswa dapat memecahkan suatu

             permasalahan menggunakan prinsip

             operator dan percabangan













































                                                                                                         02]]></page><page Index="5"><![CDATA[ALGORITMA DAN
                                                                                       PEMROGRAMAN











                                         OPERATOR








   Operator  menurut  Sukamto  (2018)  adalah  simbol  atau  tanda  yang  jika

   diletakan  pada  dua  buah  operan  dapat  menghasilkan  sebuah  hasil,

   contohnya di dalam operasi matematika di mana tanda ‘+’ diletakan diantara
   kedua  buah  nilai  akan  menghasilkan  angka  lain  hasil  penjumlahan  kedua

   bilangam sebelumnya. Terdapat beberapa jenis operator.
























































                                                                                                         03]]></page><page Index="6"><![CDATA[ALGORITMA DAN
             PEMBAGIAN                                                             PEMROGRAMAN


             OPERATOR






             Berikut ini merupakan pembagian operator














































































                                                                                                        04]]></page><page Index="7"><![CDATA[ALGORITMA DAN
                                                                                       PEMROGRAMAN











                 OPERATOR ARITMATIKA





             Operator aritmatika merupakan operator yang palng sering digunakan karena

             pengolahan  data  sering  berhubungan  dengan  nilai  numerik  (Jubilee
             Enterprise, 2017). Tabel dibawah ini menunjukan operator-operator aritmatika

             dalam bahasa pemrograman C.





















                       OPERATOR LOGIKA







          Operator  logika  pada  dasarnya  membuat  proses  logika  menjadi  lebih  kompleks.
          Dengan  menggunakan  operator  ini  pemrogram  akan  bisa  menggabungkan  beberapa
          kondisi.  Contoh  dari  penggunaan  operator  ini:  jika  A  dari  Bandung  DAN  nilainya  lebih
          tinggi  dari  80,  maka  diberikan  ucapan  kelulusan  menggunakan  bahasa  Sunda.
          Penggunaan  kata  ‘dan’  merupakan  contoh  dari  operator  logika  (Jubilee  Enterprise,
          2017).  Tabel  di  bawah  ini  menunjukan  operator  logika  dalam  bahasa  C  (Sukamto,
          2018).




















                                                                                                         05]]></page><page Index="8"><![CDATA[ALGORITMA DAN
                                                                                   PEMROGRAMAN


























































































                                                                                                        06]]></page><page Index="9"><![CDATA[ALGORITMA DAN
                                                                                       PEMROGRAMAN










                 OPERATOR RELATIONAL






 Operator  relasi  atau  conditional  operator  adalah  operator  yang  digunakan  untuk
 membandingkan variable-variable yang umumnya bertipe data angka. Namun anda juga
 dapat  menggunakannya  untuk  tipe  data  lainnya  (Jubilee  Enterprise,  2017).  Table
 dibawah ini  menunjukan operator relasi dalam bahasa C (Sukamto, 2018).
































































                                                                                                         07]]></page><page Index="10"><![CDATA[ALGORITMA DAN
                                                                                   PEMROGRAMAN











                                 PERCABANGAN







     Suatu  program  yang  hanya  berisi  runtutan  instruksi  biasanya  terdapat  dalam
   persoalan  sederhana.  Persoalan  yang  lebih  kompleks  melibatkan  analisis  berbagai
   kasus  kemungkinan  yang  terdapat  di  dalamnya.  Untuk  setiap  kasus  terdapat
   persyaratan  yang  harus  dipenuhi  dan  aksi  apa  yang  harus  dilakukan  jika
   persyaratan  dipenuhi.  Denan  adanya  analisis  kasus  maka  instruksi  tidak  dikerjakan
   secara  sekuensial  lagi  akan  tetapi  melakukan  aksi  jika  persyaratan  dipenuhi  (Munir
   & Lidya, 2016).




  Percabangan satu Kasus
  Percabangan satu kasus dinotasikan menggunakan konstruksi IF-THEN (Jika-Maka)
  berbentuk:
  if Kondisi then
   aksi
  end if


  Pada  instruksi  di  atas  aksi  dilaksanakan  jika  kondisi  bernilai  benar  (true).  Bila
  kondisi  bernilai  salah  (false),  maka  tidak  ada  aksi  yang  dilakukan.  Kata  end  if
  ditambahkan  untuk  mempertegas  awal  dan  akhir  dari  struktur  if-then  (Munir  &
  Lidya, 2016).




  Percabangan Dua Kasus
  Konstruksi IF-THEN sebelumnya hanya menyediakan satu alternatif aksi jika suatu
  kondisi terpenuhi. Kadang kita perlu memilih untuk melakukan aksi alternatif jika aksi
  pertama tidak terpenuhi,. Maka dari itu diperlukan notasi algoritma baru. Notasi
  tersebut adalah IF-THEN-ELSE


















                                                                                                        08]]></page><page Index="11"><![CDATA[ALGORITMA DAN
                                                                                       PEMROGRAMAN








   If kondisi then
    Aksi1
   else
    Aksi2
   endif

 Pernyataan di atas berarti jika aksi1 dikerjakan jika kondisi benar dan aksi2 dikerjakan
 jika kondisi salah (Munir & Lidya, 2016).




   Percabangan Tiga Kasus atau Lebih
 Masalah yang memiliki tiga kasus atau lebih dapat dianalisis menggunakan konstruksi
 IF-THEN-ELSE bertingkat-tingkat (Munir & Lidya, 2016).

   if kondisi1 then
    aksi1
   else
        if kondisi2 then
    aksi2
          else
    aksi3
    end else
           end if
   end if





































                                                                                                         09]]></page><page Index="12"><![CDATA[ALGORITMA DAN
                                                                                   PEMROGRAMAN











                                   CONTOH SOAL





 1. Harry Cotter adalah seekor Capybara yang sedang belajar sihir. Guru sihir Harry telah
 mengajarkan bahwa kalimat yang bersifat magical adalah kalimat yang huruf pertama
 dan huruf terakhirnya sama atau jarak perbedaaannya hanya satu. Sebagai contoh,
 berikut ini adalah contoh kalimat-kalimat yang bersifat magical:
 • abra kadabra: huruf pertama (a) dan huruf terakhirnya (a) sama
 • lab acadak: huruf pertama (l) dan huruf terakhirnya (k) berjarak 1
 • bac: huruf pertama (b) dan huruf terakhirnya (c) berjarak 1
 Buatlah sebuah program yang menerima masukan berupa sebuah kalimat dan akan
 menentukan apakah kalimat tersebut bersifat magical atau tidak!
 Spesifikasi Masukan
 Masukan program ini adalah sebuah kalimat. Sebuah kalimat hanya dapat mengandung
 huruf non kapital.
 Sebuah kalimat dapat mengandung spasi.
 Spesifikasi Keluaran
 Keluarkan “magical” bila kalimat tersebut bersifat magical dan “tidak magical” bila
 sebaliknya.










































                                                                                                         10]]></page><page Index="13"><![CDATA[ALGORITMA DAN
                                                                                       PEMROGRAMAN












   Step 1. Memahami Masalah

   Memahami  masalah:  Menentukan  apa  yang  diketahui  dan  ditanyakan  kemudian
   memberikan keterangan apa yang sudah diketahui cukup untuk menjawab pertanyaan.

   Soal  tersebut  adalah  soal  untuk  mengambil  input  dari  keyboard  berupa  String  dan
   nantinya  dibandingkan  karakter  pertama  dan  terakhirnya  apakah  sama  atau  apakah
   selisihnya 1. Jika sama atau selisihnya 1 maka akan mengeluarkan output "magical" dan
   jika tidak memenuhi maka akan mengeluarkan output tidak magical.

   Step 2- Mengidentifikasi Masalah



   Merencanakan penyelesaian masalah : Mengidentifikasi masalah dan mencari
   jalan yang tepat untuk menyelesaikannya

   Masalah  pada  soal  ini  pada  umumnya  adalah  masalah  mengenai  perbandingan  antara
   karakter  pertama  dalam  String  dan  karakter  terakhir  pada  suatu  String.  Disini  untuk
   mempermudah  bisa  memakai  charAt  pada  Java  dan  str.at()  pada  C++.  Kemudian
   membandingkan  dengan  operator  ==  atau  jika  selisihnya  1  tinggal  kurangi  char
   terakhir-  dengan  char  pertama  hasll  yang  menyatakan    bahwa  selisihnya  adalah  satu
   adalah jika menghasilkan nilai -1 atau 1

  Step 3- Melaksanakan Pemecahan Masalah




































                                                                                                          11]]></page><page Index="14"><![CDATA[ALGORITMA DAN
                                                                                   PEMROGRAMAN


























































































                                                                                                         12]]></page><page Index="15"><![CDATA[ALGORITMA DAN
                                                                                       PEMROGRAMAN






















































 Step 4-Memeriksa Kembali


 Memeriksa kembali hasil, langkah ini dilakukan dengan memeriksa kebenaran
 jawaban


 Pada bagian ini kita harus memerika kembali

  1. Pada program tersebut jika diinputkan String tidak akan  mengalami error
  2. method charAt pada java maupun method str.at sudah tepat
  3. Masukan  pada  c++  jangan  menggunakan  cin  karena  cin  tak  dapat  memuat
    whitespace sehingga gunakan getline
  4. Menghasilkan keluaran yang tepat














                                                                                                          13]]></page><page Index="16"><![CDATA[ALGORITMA DAN
                                                                                       PEMROGRAMAN








                            DAFTAR PUSTAKA












       Polya, G. (2015). How to Solve It: A New Aspect of Mathematical Method. New
       Jersey: Princeton University Press.
       Sukamto, R. A. (2018). Logika Algoritma dan Pemograman Dasar. Bandung:
       Modula.
       Wahyono, dkk. (2021). Buku Panduan Guru Informatika SMA Kelas 10. Jakarta:
       Pusat Kurikulum dan Perbukuan
























































                                                                                                          14]]></page></pages></Search>